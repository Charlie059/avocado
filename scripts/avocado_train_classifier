#!/usr/bin/env python
"""Train a classifier using avocado.

For now, this only supports a LightGBM classifier with the PLAsTiCC featurizer.
"""

import argparse

import avocado


if __name__ == "__main__":
    parser = argparse.ArgumentParser(description=__doc__)
    parser.add_argument(
        'dataset',
        help='Name of the dataset to train on.'
    )
    parser.add_argument(
        'classifier',
        help='Name of the classifier to produce.'
    )
    parser.add_argument(
        '--weighting',
        help='Kind of weighting to use. (default: %(default)s)',
        default='flat',
        choices=('flat', 'redshift'),
    )

    args = parser.parse_args()

    # Load the dataset
    print("Loading dataset '%s'..." % args.dataset)
    dataset = avocado.load(args.dataset, metadata_only=True)

    # Load the dataset raw features
    print("Loading raw features...")
    dataset.load_raw_features()

    # Figure out which weighting to use.
    if args.weighting == 'flat':
        weighting_function = avocado.evaluate_weights_flat
    elif args.weighting == 'redshift':
        weighting_function = avocado.evaluate_weights_redshift
    else:
        raise avocado.AvocadoException("Invalid weighting '%s'!" %
                                       args.weighting)

    # Train the classifier
    print("Training classifier '%s'..." % args.classifier)
    classifier = avocado.LightGBMClassifier(
        args.classifier,
        avocado.plasticc.PlasticcFeaturizer(),
        avocado.plasticc.plasticc_kaggle_weights,
        weighting_function=weighting_function,
    )
    classifier.train(dataset)

    # Save the classifier
    print("Saving the classifier...")
    classifier.write(overwrite=True)

    print("Done!")
